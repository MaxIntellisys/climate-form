{"version":3,"sources":["Question.js","FormHeader.js","ThankYou.js","App.js","index.js"],"names":["Question","source","register","errors","question","name","width","window","innerWidth","TextField","style","margin","label","inputRef","required","color","fontSize","message","FormHeader","role","aria-label","styles","textAlign","marginTop","ThankYou","formQuestions","height","padding","Form","useForm","handleSubmit","useState","submitted","setSubmitted","onSubmit","data","console","log","map","index","key","Button","type","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAGe,SAASA,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAC3CC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KACdC,EAAQC,OAAOC,YAAc,IAAM,OAAS,MAEhD,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CAAEJ,QAAOK,OAAQ,UACxBC,MAAOR,EACPC,KAAMA,EACNQ,SAAUX,EAAS,CACjBY,SAAU,wDAGbX,EAAOE,IACN,uBAAGK,MAAO,CAAEK,MAAO,MAAOC,SAAU,SAAWb,EAAOE,GAAMY,SAE9D,6BACA,8BCnBS,SAASC,IACtB,OACE,oCACE,2DACA,wGAEa,IACX,0BAAMC,KAAK,MAAMC,aAAW,QAA5B,kBCPR,IAAMC,EAAS,CACbC,UAAW,SACXC,UAAW,SAGE,SAASC,IACtB,OACE,yBAAKd,MAAOW,GACV,2CAEE,0BAAMF,KAAK,MAAMC,aAAW,SAA5B,gBAGA,0BAAMD,KAAK,MAAMC,aAAW,YAA5B,iBAIF,qF,YCZAK,EAAgB,CACpB,CAAErB,SAAU,0BAA2BC,KAAM,cAC7C,CAAED,SAAU,eAAgBC,KAAM,SAClC,CAAED,SAAU,8BAA+BC,KAAM,WAG7CgB,EAAS,CACbK,OAAQ,QACRf,OAAQ,SACRgB,QAAS,SACTL,UAAW,UAkCEM,MA/Bf,WAAiB,IAAD,EAC6BC,cAAnC3B,EADM,EACNA,SAAU4B,EADJ,EACIA,aAAc3B,EADlB,EACkBA,OADlB,EAEoB4B,oBAAS,GAF7B,mBAEPC,EAFO,KAEIC,EAFJ,KASd,OAAID,EAAkB,kBAACR,EAAD,MAGpB,0BAAMU,SAAUJ,GARD,SAACK,GAChBC,QAAQC,IAAIF,GACZF,GAAa,MAM2BvB,MAAOW,GAC7C,kBAACH,EAAD,MACCO,EAAca,KAAI,SAACrC,EAAQsC,GAC1B,OACE,kBAACvC,EAAD,CACEC,OAAQA,EACRuC,IAAKD,EACLrC,SAAUA,EACVC,OAAQA,OAId,kBAACsC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,WAAW5B,MAAM,WAA/C,UCxCN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3c1e1366.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function Question({ source, register, errors }) {\n  const { question, name } = source;\n  let width = window.innerWidth <= 480 ? \"100%\" : \"50%\";\n\n  return (\n    <>\n      <TextField\n        style={{ width, margin: \"30px 0\" }}\n        label={question}\n        name={name}\n        inputRef={register({\n          required: \"Este campo es requerido, ayudame ahi ðŸ˜‰\",\n        })}\n      />\n      {errors[name] && (\n        <p style={{ color: \"red\", fontSize: \"12px\" }}>{errors[name].message}</p>\n      )}\n      <br />\n      <br />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function FormHeader() {\n  return (\n    <>\n      <h2>Organizational Climate Form</h2>\n      <h4>\n        Ayudanos a conocer tu opinion sobre el clima organizacional en\n        Intellisys{\" \"}\n        <span role=\"img\" aria-label=\"wink\">\n          ðŸ˜‰\n        </span>\n      </h4>\n    </>\n  );\n}\n","import React from \"react\";\n\nconst styles = {\n  textAlign: \"center\",\n  marginTop: \"250px\",\n};\n\nexport default function ThankYou() {\n  return (\n    <div style={styles}>\n      <h1>\n        Thank yooou!\n        <span role=\"img\" aria-label=\"party\">\n          ðŸ¥³\n        </span>\n        <span role=\"img\" aria-label=\"confetti\">\n          ðŸŽ‰\n        </span>\n      </h1>\n      <h3>Apreciamos mucho que tomaste unos mins de tu tiempo!</h3>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Question from \"./Question\";\nimport FormHeader from \"./FormHeader\";\nimport ThankYou from \"./ThankYou\";\nimport Button from \"@material-ui/core/Button\";\n\nconst formQuestions = [\n  { question: \"Te gusta el Pica Pollo?\", name: \"pica_pollo\" },\n  { question: \"Marvel o DC?\", name: \"comic\" },\n  { question: \"Cual es tu postre favorito?\", name: \"postre\" },\n];\n\nconst styles = {\n  height: \"100vh\",\n  margin: \"0 auto\",\n  padding: \"30px 0\",\n  textAlign: \"center\",\n};\n\nfunction Form() {\n  const { register, handleSubmit, errors } = useForm();\n  const [submitted, setSubmitted] = useState(false);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    setSubmitted(true);\n  };\n\n  if (submitted) return <ThankYou />;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} style={styles}>\n      <FormHeader />\n      {formQuestions.map((source, index) => {\n        return (\n          <Question\n            source={source}\n            key={index}\n            register={register}\n            errors={errors}\n          />\n        );\n      })}\n      <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n        Send\n      </Button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}